pragma solidity ^0.4.25;

  contract Library{
  
    mapping (address => uint) userBookCount; 		
    address[1000] public users;
   
    // Checking out a book
    function checkOut(uint bookId) public returns(uint) {
      require(bookId >= 0 && bookId <= 999 && userBookCount[msg.sender] < 3);	  
	  users[bookId] = msg.sender;
	  userBookCount[msg.sender]++;	  
	  return bookId;
    }
   
    // Returning a book
    function checkIn(uint bookId) public returns(uint) {
      require(bookId >= 0 && bookId <= 999);	  
	  users[bookId] = 0x0000000000000000000000000000000000000000;
	  userBookCount[msg.sender]--;
	  return bookId;
    }

    // Retrieving the users
    function getUsers() public view returns (address[1000] memory) {
      return users;
    }
	
	// Retrieve userBookCount 
	function getBookCount() public view returns (uint memory) {
		return userBookCount[msg.sender];
	}
	
  }